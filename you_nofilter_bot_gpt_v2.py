import os
import openai
import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    ConversationHandler,
    filters,
)

# ==== –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø ====
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")

openai.api_key = OPENAI_API_KEY

# ==== –õ–û–ì–ò ====
logging.basicConfig(format="%(asctime)s - %(levelname)s - %(message)s", level=logging.INFO)

# ==== –°–¢–ê–î–ò–ò –°–ï–°–°–ò–ò ====
SESSION = range(1)

# ==== –ö–õ–ê–í–ò–ê–¢–£–†–ê ====
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton("üß† –ù–∞—á–∞—Ç—å —Å–µ—Å—Å–∏—é")],
        [KeyboardButton("üí≥ –ö—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø"), KeyboardButton("‚ùì –û –±–æ—Ç–µ")]
    ],
    resize_keyboard=True,
    one_time_keyboard=False
)

# ==== –û–ë–†–ê–ë–û–¢–ß–ò–ö –°–¢–ê–†–¢–ê ====
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –±–æ—Ç.\n–í—ã–±–µ—Ä–∏, —Å —á–µ–≥–æ –Ω–∞—á–Ω—ë–º:",
        reply_markup=main_keyboard
    )

# ==== –°–¢–ê–†–¢ –°–ï–°–°–ò–ò ====
async def begin_session(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["history"] = []
    await update.message.reply_text("–•–æ—Ä–æ—à–æ. –ù–∞–ø–∏—à–∏, —á—Ç–æ —É —Ç–µ–±—è –≤–Ω—É—Ç—Ä–∏ ‚Äî –∏ –º—ã –Ω–∞—á–Ω—ë–º.")
    return SESSION

# ==== –°–ï–°–°–ò–Ø GPT ====
async def handle_session(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text
    context.user_data["history"].append({"role": "user", "content": user_input})

    prompt = [
        {"role": "system", "content": "–¢—ã ‚Äî —ç–º–ø–∞—Ç–∏—á–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥. –û—Ç–≤–µ—á–∞–π —Å —Ç–µ–ø–ª–æ–º –∏ —É—á–∞—Å—Ç–∏–µ–º. –ü–æ–º–æ–≥–∏ —á–µ–ª–æ–≤–µ–∫—É –ø–æ–Ω—è—Ç—å —Å–µ–±—è. –ù–µ –¥–∞–≤–∞–π –≥–æ—Ç–æ–≤—ã—Ö —Å–æ–≤–µ—Ç–æ–≤, –∞ –º—è–≥–∫–æ –Ω–∞–ø—Ä–∞–≤–ª—è–π."}
    ] + context.user_data["history"]

    response = openai.chat.completions.create(
        model="gpt-4o-mini",
        messages=prompt
    )

    reply = response.choices[0].message.content
    context.user_data["history"].append({"role": "assistant", "content": reply})
    await update.message.reply_text(reply)
    return SESSION

# ==== –°–ë–†–û–° ====
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data.clear()
    await update.message.reply_text("–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ù–∞–∂–º–∏ ¬´üß† –ù–∞—á–∞—Ç—å —Å–µ—Å—Å–∏—é¬ª, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")
    return ConversationHandler.END

# ==== –û–ü–õ–ê–¢–ê ====
async def buy(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üí≥ –ü–ª–∞—Ç—ë–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∞.\n–ü–æ–∫–∞ —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ."
    )

# ==== –û –ë–û–¢–ï ====
async def about(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "‚ùì –≠—Ç–æ—Ç –±–æ—Ç ‚Äî —Ç–≤–æ–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫.\n–û–Ω –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Å–µ–±–µ, –∑–∞–¥–∞—Ç—å –≤–∞–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —Å–µ–±—è –ø–æ-–Ω–æ–≤–æ–º—É.\n\n–í—Å–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã. –¢—ã. –ë–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞."
    )

# ==== –ó–ê–ü–£–°–ö ====
if __name__ == "__main__":
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("üß† –ù–∞—á–∞—Ç—å —Å–µ—Å—Å–∏—é"), begin_session)],
        states={SESSION: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_session)]},
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv_handler)
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.Regex("üí≥ –ö—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø"), buy))
    app.add_handler(MessageHandler(filters.Regex("‚ùì –û –±–æ—Ç–µ"), about))
    app.add_handler(CommandHandler("menu", start))

    app.run_webhook(
        listen="0.0.0.0",
        port=int(os.getenv("PORT", 10000)),
        webhook_url=WEBHOOK_URL,
    )
